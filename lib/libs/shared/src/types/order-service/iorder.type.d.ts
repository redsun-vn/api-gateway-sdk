import { tags } from 'typia';
import { BaseResponse } from '../common.type';
export declare namespace IOrder {
    interface ICreateOrder {
        branch_id: number & tags.Type<'uint32'>;
        staff_id: number & tags.Type<'uint32'>;
        pos_session_id: number & tags.Type<'uint32'>;
        sale_channel_id: number & tags.Type<'uint32'>;
        billing_address_id?: number & tags.Type<'uint32'>;
        shipping_address_id?: number & tags.Type<'uint32'>;
        draf_order_id: number & tags.Type<'uint32'>;
        partner_id?: number & tags.Type<'uint32'>;
        currency_code: string;
        email: string;
        phone: string;
        note?: string;
        description?: string;
        tags?: string;
        total: number;
        totalWeight: number;
        subTotal: number;
        shippingTotal: number;
        discountTotal: number;
        rawDiscountTotal: number;
        taxTotal: number;
        originTotal: number;
        paidTotal: number;
        refundedAmount: number;
        refundedTotal: number;
        totalGuests: number;
        customerAcceptMarketing: boolean;
        taxesIncluded: boolean;
        refundable: boolean;
        completedAt?: Date;
        confirmedAt?: Date;
        processedAt?: Date;
        canceledAt?: Date;
        cancelReason?: string;
        confirmationCode?: string;
        paymentGatewayName?: string;
        clientIp?: string;
        discountCode?: string;
        sourceIdentifier?: string;
        status: string;
        codStatus?: string;
        orderProcessingStatus?: string;
        fulfillmentStatus?: string;
        financialStatus?: string;
        userId?: string;
    }
    interface ICreateOrderKafka extends ICreateOrder {
        shop_id: number & tags.Type<'uint32'>;
    }
    interface IUpdateOrder {
        billing_address_id?: number & tags.Type<'uint32'>;
        shipping_address_id?: number & tags.Type<'uint32'>;
        email?: string;
        phone?: string;
        note?: string;
        description?: string;
        tags?: string;
        total?: number;
        totalWeight?: number;
        subTotal?: number;
        shippingTotal?: number;
        discountTotal?: number;
        rawDiscountTotal?: number;
        taxTotal?: number;
        originTotal?: number;
        paidTotal?: number;
        refundedAmount?: number;
        refundedTotal?: number;
        totalGuests?: number;
        customerAcceptMarketing?: boolean;
        taxesIncluded?: boolean;
        refundable?: boolean;
        completedAt?: Date;
        confirmedAt?: Date;
        processedAt?: Date;
        canceledAt?: Date;
        cancelReason?: string;
        confirmationCode?: string;
        paymentGatewayName?: string;
        clientIp?: string;
        discountCode?: string;
        sourceIdentifier?: string;
        status?: string;
        codStatus?: string;
        orderProcessingStatus?: string;
        fulfillmentStatus?: string;
        financialStatus?: string;
        userId?: string;
    }
    interface IDetailOrderResponse extends BaseResponse {
        shop_id: number | string | null;
        branch_id: number | string | null;
        staff_id: number | string | null;
        pos_session_id?: number | string | null;
        sale_channel_id: number | string | null;
        billing_address_id: number | string | null;
        shipping_address_id: number | string | null;
        draf_order_id: number | string | null;
        parent_id: number | string | null;
        idempotency_key: string;
        code: string;
        currency_code: string;
        email: string;
        phone: string;
        note: string;
        description: string;
        tags: string;
        total: number;
        totalWeight: number;
        subTotal: number;
        shippingTotal: number;
        discountTotal: number;
        rawDiscountTotal: number;
        taxTotal: number;
        originTotal: number;
        paidTotal: number;
        refundedAmount: number;
        refundedTotal: number;
        totalGuests: number;
        customerAcceptMarketing: boolean;
        taxesIncluded: boolean;
        refundable: boolean;
        completedAt: Date;
        confirmedAt: Date;
        processedAt: Date;
        canceledAt: Date;
        cancelReason: string;
        confirmationCode: string;
        paymentGatewayName: string;
        clientIp: string;
        discountCode: string;
        sourceIdentifier: string;
        status: string;
        codStatus: string;
        orderProcessingStatus: string;
        fulfillmentStatus: string;
        financialStatus: string;
    }
}
